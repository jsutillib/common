(function(exports,document){"use strict";if(exports.jsutils===undefined){exports.jsutils={}}Array.prototype._trim=function(){return this.filter(function(e){return`${e}`.trim()!==""})};Element.prototype._append=function(...args){this.append(...args);return this};function tag(tag,props={},text=null){let parts_id=tag.split("#");let id=null;if(parts_id.length==1){tag=parts_id[0]}else{parts_id[1]=parts_id[1].split(".");id=parts_id[1][0];tag=[parts_id[0],...parts_id[1].slice(1)].join(".")}let parts=tag.split(".");tag=parts[0];if(tag===""){tag="div"}if(typeof props==="string"){text=props;props={}}if(text!==null){props.textContent=text}if(id!==null){props.id=id}props.className=[props.className,...parts.slice(1)]._trim().join(" ").trim();let el=document.createElement(tag);for(let prop in props){if(el[prop]!==undefined){el[prop]=props[prop]}else{el.setAttribute(prop,props[prop])}}return el}function merge(o1,o2){let result={};for(let key in o1){result[key]=o1[key];if(o2[key]!==undefined){result[key]=o2[key]}}return result}function processprops(target,objectfnc=v=>v,clone=false){if(typeof target==="object"){let result=target;if(clone){result={}}for(let prop in target){if(target.hasOwnProperty(prop)){result[prop]=objectfnc(target[prop],prop,target)}}if(clone){result.__proto__=target.__proto__}return result}else{return target}}function clone(target,objectfnc=x=>clone(x)){return processprops(target,objectfnc,true)}exports.jsutils.tag=tag;exports.jsutils.merge=merge;exports.jsutils.clone=clone;exports.jsutils.processprops=processprops})(window,document);